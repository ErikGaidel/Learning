# -*- coding: utf-8 -*-
"""calc_fib_num.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C1SIKNsL4Heg7xFcuuDP8l6FtzkGK7Hv
"""

def slow_recurs_fib(n:int)->int:
    """ O(Fib(n)) - exponential"""
    if n <= 1:
        return n
    return slow_recurs_fib(n-1) + slow_recurs_fib(n-2)


def fib0(n:int)->int:
    """dynamic realisation with memory for table( O(n) )"""
    F = [0,1] + [0]*(n-1)
    for i in range(2,n+1):
        F[i] = F[i-1] + F[i-2]
    return F[n]


def fib(n:int)->int:
    """ calc fib num without extra memory"""
    prev = 0
    curr = 1
    for i in range(n-1):
        prev, curr = curr, prev + curr
    return curr


def test():
    assert slow_recurs_fib(10) == 55
    assert fib0(22) == 17711
    assert fib(22) == 17711


if __name__ =="__main__":
    test()