# -*- coding: utf-8 -*-
"""correct_brackets_in_code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pyEb71kNgIKl_pYkthWoEB8YXVEhk84R
"""

from collections import deque  


def check_brackets(code:str):
    my_stack = deque()
    #op_brack, cl_brack = "([{", ")]}"
    for i in range(len(code)):
        w = code[i]
        if w in "([{":
            my_stack.append([w,i+1])
        if w in ")]}":
            if not my_stack:
                return i+1
                
            char = my_stack.pop()
            ch = char[0]
            if (ch=="(" and w==")") or (ch=="[" and w=="]") or (ch=="{" and w=="}"):
                continue
            else:
                return i + 1
                
    else:
        if not my_stack:
           return "Success"
        else:
           return my_stack.pop()[1]


def test():

    assert check_brackets("") == "Success"
    assert check_brackets("[]") == "Success"
    assert check_brackets("{}[]") == "Success"
    assert check_brackets("[()]") == "Success"
    assert check_brackets("(())") == "Success"
    assert check_brackets("{[]}()") == "Success"
    assert check_brackets("{") == 1
    assert check_brackets("{[}") == 3
    assert check_brackets("foo(bar);") == "Success"
    assert check_brackets("foo(bar[i);") == 10
    assert check_brackets("([](){([])})") == "Success"
    assert check_brackets("()[]}") == 5
    assert check_brackets("{{[()]]") == 7

    assert check_brackets("sdaefaas") == "Success"
    assert check_brackets("{{{**[][][]") == 3
    assert check_brackets("}") == 1
    assert check_brackets("{*{{}") == 3
    assert check_brackets("([](){([])})") == "Success"
    assert check_brackets("()[]}") == 5
    assert check_brackets("{{[()]]") == 7
    assert check_brackets("{{{[][][]") == 3
    assert check_brackets("[[*") == 2
    assert check_brackets("{*}") == "Success"
    assert check_brackets("{{") == 2
    assert check_brackets("{}") == "Success"
    assert check_brackets("") == "Success"
    assert check_brackets("*{}") == "Success"


    
def main():
    code = input()
    print(check_brackets(code))


if __name__=="__main__":
    main()