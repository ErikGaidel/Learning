# -*- coding: utf-8 -*-
"""gen_perm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/158KI7CUXVGQTqlbtjilVsSOYR-Qf_00d
"""

def gen_number(N:int, M:int, prefix:list = None):
    """
       Генерирует все числа ( с лидирующими незначащями нулями)
       в N-ричной системе счисления (N<=10) длины M
    """
    prefix = prefix or []
    if M == 0:
        print(*prefix)
        return

    for digit in range(N):
        prefix.append(digit)
        gen_number(N, M-1, prefix)
        prefix.pop()    


def gen_permutation(N:int, M:int = -1, prefix:list = None):
    """
       Генерирует все перестановки N чисел в М позициях,
       с префиском prefix
    """
    prefix = prefix or []
    M = N if M == -1 else M # по умлочанию N числе в N позициях

    if M == 0:
        print(*prefix)
        return

    for number in range(1,N+1):
        if number in prefix:
            continue
        prefix.append(number)
        gen_permutation(N, M-1, prefix)
        prefix.pop()  


def main():
    #gen_number(3,3)
    gen_permutation(3)


if __name__ == "__main__":
    main()

