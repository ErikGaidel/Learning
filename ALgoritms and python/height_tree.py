# -*- coding: utf-8 -*-
"""height_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YaAoT2CYf6iad58aWDrNx4zdhSozL4xV
"""

def height_tree(parents:list, n:int):
    """ return height of tree """
    h = 0
    adjacency = [[] for _ in range(n+1)]
    for i in range(n):
        adjacency[parents[i]] += [i]
    
    root = adjacency[-1]
    while len(root):
        prev_root, root = root, []
        for i in prev_root:
            root += adjacency[i]
        h += 1
    return h


def main():
    n = int(input())
    parents = list(map(int,input().split()))
    print(height_tree(parents,n))


def test():
    assert height_tree([4, -1, 4, 1, 1], 5) == 3
    assert height_tree([-1, 0, 4, 0, 3], 5) == 4
    assert height_tree([9, 7, 5, 5, 2, 9, 9, 9, 2, -1], 10) == 4

    assert height_tree([-1], 1) == 1


if __name__ == "__main__":
    main()