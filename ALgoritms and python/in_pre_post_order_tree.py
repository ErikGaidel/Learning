# -*- coding: utf-8 -*-
"""in\pre\post_order_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-_0ghCBwQGq0AmtQFyhcJTbtc_fk-jdp
"""

value = []
def in_order(v:int,tree:list,n:int):
    if tree[v][1] != -1:
        in_order(tree[v][1],tree,n)
    value.append(tree[v][0])
    if tree[v][2] != -1:
        in_order(tree[v][2],tree,n)


def pre_order(v:int,tree:list,n:int):
    value.append(tree[v][0])
    if tree[v][1] != -1:
        pre_order(tree[v][1],tree,n)    
    if tree[v][2] != -1:
        pre_order(tree[v][2],tree,n)


def post_order(v:int,tree:list,n:int):
    if tree[v][1] != -1:
        post_order(tree[v][1],tree,n)    
    if tree[v][2] != -1:
        post_order(tree[v][2],tree,n)
    value.append(tree[v][0])

    
def main():
    n = int(input())
    tree = [list(map(int,input().split())) for _ in range(n)]
    in_order(0,tree,n)
    print(*value)
    value.clear()
    pre_order(0,tree,n)
    print(*value)
    value.clear()
    post_order(0,tree,n)
    print(*value)


if __name__ == "__main__":
    main()