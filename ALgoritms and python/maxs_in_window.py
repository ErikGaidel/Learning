# -*- coding: utf-8 -*-
"""maxs_in_window.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C0aVV4Gj1s4-2h9-yP6AaEND70oGJFKm
"""

from collections import deque


def maxs_in_window(A:list, n:int, m:int):
    """ returns list of maximus at windows of size m in list A (size A is n)"""
    if m == 1:
        return A
    window_in, window_out, window_out_max, maximus = deque(),deque(),deque(),[]
    i = 0
    while i <= n:
        if len(window_in) < m:
            if window_in:
                window_in.append([A[i], max(A[i], window_in[-1][1])])
            else:
                window_in.append([A[i],A[i]])
            i += 1
            if len(window_in)==m:
                continue
        else:
            for j in range(m):
                el = window_in.pop()
                window_out.append(el[0])
                if window_out_max:
                    window_out_max.append(max(window_out_max[j-1],el[0]))
                else:
                    window_out_max.append(el[0])
                
        while len(window_in) + len(window_out) == m:
            if not window_out_max:
                break
            if window_in:
                maximus.append(max(window_in[-1][1], window_out_max.pop()))
                window_in.append([A[i], max(A[i], window_in[-1][1])])
            else:
                if i < n:
                     window_in.append([A[i], A[i]])
                maximus.append(window_out_max.pop())
            window_out.pop()
            i += 1
            
    return maximus


def main():
    n = int(input())
    A = list(map(int,input().split()))
    m = int(input())
    maximus = maxs_in_window(A, n, m)
    print(*maximus)


def test():
    assert maxs_in_window(list(map(int,"2 7 3 1 5 2 6 2".split())), 8,
                          4) == list(map(int,"7 7 5 6 6".split()))
    assert maxs_in_window(list(map(int,"2 3 9".split())), 3,
                          3) == [9]
    assert maxs_in_window(list(map(int,"2 1 5".split())), 3,
                          1) == list(map(int,"2 1 5".split()))

if __name__ == "__main__":
    main()