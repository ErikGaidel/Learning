# -*- coding: utf-8 -*-
"""merge_sortipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OY_bI01_5rCb4yZAbbSYcMwGmUKS0qPy
"""

inv = 0


def merge(list1:list, list2:list):
    result = []
    global inv
    p1 = 0  # указатель на первый элемент списка list1
    p2 = 0  # указатель на первый элемент списка list2
    n1, n2 = len(list1), len(list2)
    while p1 < n1 and p2 < n2:  # пока не закончился хотя бы один список
        if list1[p1] <= list2[p2]:
            result.append(list1[p1])
            p1 += 1
        else:
            result.append(list2[p2])
            p2 += 1
            inv += n1 - p1
            
            
    if p1 < n1:   # прицепление остатка
        result += list1[p1:]
    if p2 < n2:
        result += list2[p2:]
    return result


def merge_sort(A:list):
    N = len(A)
    if N < 2:
        return A
    else:
        m = N//2
        return merge(merge_sort(A[:m]),merge_sort(A[m:]))


def main():
    n = int(input())
    A = list(map(int,input().split()))
    A = merge_sort(A)
    print(inv)

    
if __name__ == "__main__":
    main()